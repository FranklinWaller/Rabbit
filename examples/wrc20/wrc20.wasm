(module
 (type $FUNCSIG$v (func))
 (type $FUNCSIG$i (func (result i32)))
 (type $FUNCSIG$iii (func (param i32 i32) (result i32)))
 (type $FUNCSIG$ii (func (param i32) (result i32)))
 (type $FUNCSIG$iiii (func (param i32 i32 i32) (result i32)))
 (import "index" "rut_getCallDataSize" (func $assembly/index/rut_getCallDataSize (result i32)))
 (import "index" "rut_revert" (func $assembly/index/rut_revert (param i32 i32) (result i32)))
 (import "index" "rut_callDataCopy" (func $assembly/index/rut_callDataCopy (param i32 i32 i32) (result i32)))
 (import "index" "rut_log" (func $assembly/index/rut_log (param i32) (result i32)))
 (import "index" "rut_storageLoad" (func $assembly/index/rut_storageLoad (param i32 i32) (result i32)))
 (import "index" "rut_finish" (func $assembly/index/rut_finish (param i32 i32) (result i32)))
 (import "index" "rut_getCaller" (func $assembly/index/rut_getCaller (param i32) (result i32)))
 (import "index" "rut_storageStore" (func $assembly/index/rut_storageStore (param i32 i32) (result i32)))
 (import "index" "rut_getAddress" (func $assembly/index/rut_getAddress (param i32) (result i32)))
 (memory $0 0)
 (table $0 1 funcref)
 (elem (i32.const 0) $null)
 (global $~lib/allocator/arena/startOffset (mut i32) (i32.const 0))
 (global $~lib/allocator/arena/offset (mut i32) (i32.const 0))
 (global $~lib/memory/HEAP_BASE i32 (i32.const 8))
 (export "memory" (memory $0))
 (export "table" (table $0))
 (export "main" (func $assembly/index/main))
 (start $start)
 (func $start:~lib/allocator/arena (; 9 ;) (type $FUNCSIG$v)
  global.get $~lib/memory/HEAP_BASE
  i32.const 7
  i32.add
  i32.const 7
  i32.const -1
  i32.xor
  i32.and
  global.set $~lib/allocator/arena/startOffset
  global.get $~lib/allocator/arena/startOffset
  global.set $~lib/allocator/arena/offset
 )
 (func $start:assembly/index (; 10 ;) (type $FUNCSIG$v)
  call $start:~lib/allocator/arena
 )
 (func $~lib/allocator/arena/__memory_allocate (; 11 ;) (type $FUNCSIG$ii) (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  local.get $0
  i32.const 1073741824
  i32.gt_u
  if
   unreachable
  end
  global.get $~lib/allocator/arena/offset
  local.set $1
  local.get $1
  local.get $0
  local.tee $2
  i32.const 1
  local.tee $3
  local.get $2
  local.get $3
  i32.gt_u
  select
  i32.add
  i32.const 7
  i32.add
  i32.const 7
  i32.const -1
  i32.xor
  i32.and
  local.set $4
  current_memory
  local.set $5
  local.get $4
  local.get $5
  i32.const 16
  i32.shl
  i32.gt_u
  if
   local.get $4
   local.get $1
   i32.sub
   i32.const 65535
   i32.add
   i32.const 65535
   i32.const -1
   i32.xor
   i32.and
   i32.const 16
   i32.shr_u
   local.set $2
   local.get $5
   local.tee $3
   local.get $2
   local.tee $6
   local.get $3
   local.get $6
   i32.gt_s
   select
   local.set $3
   local.get $3
   grow_memory
   i32.const 0
   i32.lt_s
   if
    local.get $2
    grow_memory
    i32.const 0
    i32.lt_s
    if
     unreachable
    end
   end
  end
  local.get $4
  global.set $~lib/allocator/arena/offset
  local.get $1
 )
 (func $assembly/index/do_balance (; 12 ;) (type $FUNCSIG$v)
  (local $0 i32)
  (local $1 i32)
  call $assembly/index/rut_getCallDataSize
  i32.const 24
  i32.ne
  if
   i32.const 0
   i32.const 0
   call $assembly/index/rut_revert
   drop
  end
  block $~lib/memory/memory.allocate|inlined.1 (result i32)
   i32.const 20
   local.set $0
   local.get $0
   call $~lib/allocator/arena/__memory_allocate
   br $~lib/memory/memory.allocate|inlined.1
  end
  local.set $0
  local.get $0
  i32.const 4
  i32.const 20
  call $assembly/index/rut_callDataCopy
  drop
  block $~lib/memory/memory.allocate|inlined.2 (result i32)
   i32.const 32
   local.set $1
   local.get $1
   call $~lib/allocator/arena/__memory_allocate
   br $~lib/memory/memory.allocate|inlined.2
  end
  local.set $1
  local.get $0
  local.get $1
  call $assembly/index/rut_storageLoad
  drop
  local.get $1
  i32.const 32
  call $assembly/index/rut_finish
  drop
 )
 (func $assembly/index/do_transfer (; 13 ;) (type $FUNCSIG$v)
  (local $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  call $assembly/index/rut_getCallDataSize
  i32.const 32
  i32.ne
  if
   i32.const 0
   i32.const 0
   call $assembly/index/rut_revert
   drop
  end
  block $~lib/memory/memory.allocate|inlined.3 (result i32)
   i32.const 32
   local.set $0
   local.get $0
   call $~lib/allocator/arena/__memory_allocate
   br $~lib/memory/memory.allocate|inlined.3
  end
  local.set $0
  local.get $0
  call $assembly/index/rut_getCaller
  drop
  block $~lib/memory/memory.allocate|inlined.4 (result i32)
   i32.const 32
   local.set $1
   local.get $1
   call $~lib/allocator/arena/__memory_allocate
   br $~lib/memory/memory.allocate|inlined.4
  end
  local.set $1
  local.get $1
  i32.const 4
  i32.const 20
  call $assembly/index/rut_callDataCopy
  drop
  block $~lib/memory/memory.allocate|inlined.5 (result i32)
   i32.const 32
   local.set $2
   local.get $2
   call $~lib/allocator/arena/__memory_allocate
   br $~lib/memory/memory.allocate|inlined.5
  end
  local.set $2
  local.get $2
  i32.const 24
  i32.const 8
  call $assembly/index/rut_callDataCopy
  drop
  block $~lib/memory/memory.allocate|inlined.6 (result i32)
   i32.const 32
   local.set $3
   local.get $3
   call $~lib/allocator/arena/__memory_allocate
   br $~lib/memory/memory.allocate|inlined.6
  end
  local.set $3
  block $~lib/memory/memory.allocate|inlined.7 (result i32)
   i32.const 32
   local.set $4
   local.get $4
   call $~lib/allocator/arena/__memory_allocate
   br $~lib/memory/memory.allocate|inlined.7
  end
  local.set $4
  local.get $0
  local.get $3
  call $assembly/index/rut_storageLoad
  drop
  local.get $1
  local.get $4
  call $assembly/index/rut_storageLoad
  drop
  local.get $3
  i32.load
  local.set $5
  local.get $4
  i32.load
  local.set $6
  local.get $2
  i32.load
  local.set $7
  local.get $5
  local.get $7
  i32.lt_s
  if
   i32.const 0
   i32.const 0
   call $assembly/index/rut_revert
   drop
  end
  local.get $3
  local.get $5
  local.get $7
  i32.sub
  i32.store
  local.get $4
  local.get $6
  local.get $7
  i32.add
  i32.store
  local.get $0
  local.get $3
  call $assembly/index/rut_storageStore
  drop
  local.get $1
  local.get $4
  call $assembly/index/rut_storageStore
  drop
 )
 (func $assembly/index/main (; 14 ;) (type $FUNCSIG$v)
  (local $0 i32)
  (local $1 i32)
  (local $2 i32)
  call $assembly/index/rut_getCallDataSize
  i32.const 4
  i32.lt_s
  if
   i32.const 0
   i32.const 0
   call $assembly/index/rut_revert
   drop
  end
  block $~lib/memory/memory.allocate|inlined.0 (result i32)
   i32.const 4
   local.set $0
   local.get $0
   call $~lib/allocator/arena/__memory_allocate
   br $~lib/memory/memory.allocate|inlined.0
  end
  local.set $0
  local.get $0
  i32.const 0
  i32.const 4
  call $assembly/index/rut_callDataCopy
  drop
  local.get $0
  i32.load
  local.set $1
  local.get $1
  call $assembly/index/rut_log
  drop
  block $break|0
   block $case2|0
    block $case1|0
     block $case0|0
      local.get $1
      local.set $2
      local.get $2
      i32.const -1718418918
      i32.eq
      br_if $case0|0
      local.get $2
      i32.const 1563795389
      i32.eq
      br_if $case1|0
      br $case2|0
     end
     call $assembly/index/do_balance
     br $break|0
    end
    call $assembly/index/do_transfer
    br $break|0
   end
   i32.const 0
   i32.const 0
   call $assembly/index/rut_revert
   drop
  end
  block $~lib/memory/memory.allocate|inlined.8 (result i32)
   i32.const 32
   local.set $2
   local.get $2
   call $~lib/allocator/arena/__memory_allocate
   br $~lib/memory/memory.allocate|inlined.8
  end
  local.set $2
  local.get $2
  call $assembly/index/rut_getAddress
  drop
  local.get $2
  i32.const 100
  call $assembly/index/rut_storageStore
  drop
 )
 (func $start (; 15 ;) (type $FUNCSIG$v)
  call $start:assembly/index
 )
 (func $null (; 16 ;) (type $FUNCSIG$v)
 )
)
